{"version":3,"sources":["actions/index.js","reducers/index.js","store/index.js","components/ShoppingItem.js","components/AddShoppingItem.js","components/ShoppingStore.js","components/CarItem.js","components/CartItems.js","index.js"],"names":["reduceShopItemAction","item","type","payload","Object","objectSpread2","addItemAction","itemText","amount","cost","id","uuid","v4","totalAmount","datetime","Date","addCartItemAction","checkoutAction","increaseItemQuantityAction","SHOPPING_ITEMS_INITIAL_STATE","SHOPPING_CART_INITIAL_STATE","rootReducer","combineReducers","shoppingItems","state","arguments","length","undefined","action","concat","toConsumableArray","sort","a","b","addItemReducer","newItem","map","myItem","reduceShopItemReducer","cartItems","items","includes","containsItem","addCardItemReducer","increaseItemQuantityReducer","store","createStore","ShoppingItem","handleCartAdd","_this","props","sendItem","addedToCartDatetime","dispatch","react_default","createElement","Container","Row","Col","ListGroupItem","key","this","toString","className","Button","onClick","color","React","Component","connect","AddShoppingItem","inputText","handleKeyPress","charCode","addItem","handleAmountChange","e","setState","target","value","validateAmount","parseInt","validateCost","parseFloat","valdiateInput","clearInputs","handleChange","handleCostChange","InputGroup","InputGroupAddon","addonType","outline","Input","placeholder","onChange","onKeyPress","components_AddShoppingItem","ListGroup","components_ShoppingItem","CartItem","quantity","validateIncrease","dispatchQuantity","handleQuantity","console","log","CartItems","checkOut","CarItem","reduce","rootElement","document","getElementById","ReactDOM","render","es","components_ShoppingStore","components_CartItems"],"mappings":"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","file":"static/js/main.466bcb93.chunk.js","sourcesContent":["import uuid from \"uuid\";\r\nexport const ADD_LIST_ITEM = \"ADD_LIST_ITEM\";\r\nexport const ADD_CART_ITEM = \"ADD_CART_ITEM\";\r\nexport const REDUCE_SHOP_ITEM = \"REDUCE_SHOP_ITEM\";\r\n\r\nexport const reduceShopItemAction = item => {\r\n  return {\r\n    type: REDUCE_SHOP_ITEM,\r\n    payload: {\r\n      ...item\r\n    }\r\n  };\r\n};\r\nexport const addItemAction = (itemText, amount, cost) => {\r\n  return {\r\n    type: ADD_LIST_ITEM,\r\n    payload: {\r\n      id: uuid.v4(),\r\n      itemText,\r\n      amount,\r\n      cost,\r\n      totalAmount: amount,\r\n      datetime: new Date()\r\n    }\r\n  };\r\n};\r\n\r\nexport const addCartItemAction = item => {\r\n  return {\r\n    type: ADD_CART_ITEM,\r\n    payload: {\r\n      ...item\r\n    }\r\n  };\r\n};\r\n\r\nexport const CHECKOUT = \"CHECKOUT\";\r\nexport const checkoutAction = () => {\r\n  return {\r\n    type: CHECKOUT,\r\n    payload: {}\r\n  };\r\n};\r\n\r\nexport const INCREASE_ITEM_QUANTITY = \"INCREASE_ITEM_QUANTITY\";\r\nexport const increaseItemQuantityAction = item => {\r\n  return {\r\n    type: INCREASE_ITEM_QUANTITY,\r\n    payload: {\r\n      ...item\r\n    }\r\n  };\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  ADD_LIST_ITEM,\r\n  ADD_CART_ITEM,\r\n  CHECKOUT,\r\n  REDUCE_SHOP_ITEM,\r\n  INCREASE_ITEM_QUANTITY\r\n} from \"../actions/\";\r\nconst SHOPPING_ITEMS_INITIAL_STATE = [];\r\nconst SHOPPING_CART_INITIAL_STATE = [];\r\n\r\nconst containsItem = (items, item) =>\r\n  items.map(myItem => myItem.id === item.id).includes(true);\r\nconst addItemReducer = (state, item) => {\r\n  return [...state, item].sort((a, b) => b.datetime - a.datetime);\r\n};\r\n\r\nconst addCardItemReducer = (state, item) => {\r\n  if (containsItem(state, item)) {\r\n    return state.map(myItem => {\r\n      if (myItem.id === item.id) {\r\n        return {\r\n          ...myItem,\r\n          amount: myItem.amount + 1\r\n        };\r\n      } else {\r\n        return myItem;\r\n      }\r\n    });\r\n  }\r\n  return [...state, { ...item, amount: 1 }].sort(\r\n    (a, b) => a.datetime - b.datetime\r\n  );\r\n};\r\n\r\nconst reduceShopItemReducer = (state, item) => {\r\n  let newItem = {\r\n    ...item,\r\n    amount: item.amount - 1\r\n  };\r\n  return state.map(myItem => {\r\n    if (myItem.id === item.id) {\r\n      return newItem;\r\n    } else {\r\n      return myItem;\r\n    }\r\n  });\r\n};\r\n\r\nconst checkoutReducer = () => [];\r\n\r\nconst increaseItemQuantityReducer = (state, item) => {\r\n  return state.map(myItem => {\r\n    if (item.id === myItem.id) {\r\n      return item;\r\n    }\r\n    return myItem;\r\n  });\r\n};\r\n\r\nconst shoppingCartReducer = (state = SHOPPING_CART_INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADD_CART_ITEM:\r\n      return addCardItemReducer(state, action.payload);\r\n    case CHECKOUT:\r\n      return checkoutReducer();\r\n    case INCREASE_ITEM_QUANTITY:\r\n      return increaseItemQuantityReducer(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst shoppingItemsReducer = (state = SHOPPING_ITEMS_INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADD_LIST_ITEM:\r\n      return addItemReducer(state, action.payload);\r\n    case REDUCE_SHOP_ITEM:\r\n      return reduceShopItemReducer(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  shoppingItems: shoppingItemsReducer,\r\n  cartItems: shoppingCartReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer);\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Container, ListGroupItem, Button, Row, Col } from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { addCartItemAction, reduceShopItemAction } from \"../actions\";\r\n\r\nclass ShoppingItem extends React.Component {\r\n  handleCartAdd = () => {\r\n    if (this.props.item.amount <= 0) {\r\n      return;\r\n    }\r\n    const sendItem = {\r\n      ...this.props.item,\r\n      addedToCartDatetime: new Date()\r\n    };\r\n    this.props.dispatch(addCartItemAction(sendItem));\r\n    // dispatch an action that will reduce the amount\r\n    this.props.dispatch(reduceShopItemAction(this.props.item));\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <ListGroupItem key={this.props.item.id.toString()}>\r\n              <Row>\r\n                <Col>\r\n                  <h5>\r\n                    {this.props.item.itemText}\r\n                    <span className={\"ml-3\"}>{this.props.item.amount}</span>\r\n                  </h5>\r\n                </Col>\r\n                <Col>\r\n                  <h6>${this.props.item.cost}</h6>\r\n                </Col>\r\n                <Col>\r\n                  <Button onClick={this.handleCartAdd} color=\"success\">\r\n                    Add to Cart\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(ShoppingItem);\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  InputGroup,\r\n  Button,\r\n  Input,\r\n  InputGroupAddon\r\n} from \"reactstrap\";\r\n\r\nimport { addItemAction } from \"../actions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AddShoppingItem extends React.Component {\r\n  state = {\r\n    inputText: \"\",\r\n    amount: \"\",\r\n    cost: \"\"\r\n  };\r\n  handleKeyPress = key => {\r\n    if (key.charCode === 13) {\r\n      this.addItem();\r\n    }\r\n  };\r\n  handleAmountChange = e => {\r\n    this.setState({ amount: e.target.value });\r\n  };\r\n  validateAmount = () => {\r\n    return parseInt(this.state.amount, 10) > 0;\r\n  };\r\n  validateCost = () => {\r\n    return parseFloat(this.state.cost, 10);\r\n  };\r\n  valdiateInput = () => {\r\n    if (this.state.inputText) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  clearInputs = () => {\r\n    this.setState({ inputText: \"\", amount: \"\" });\r\n  };\r\n  addItem = () => {\r\n    if (this.valdiateInput() && this.validateAmount() && this.validateCost()) {\r\n      this.props.dispatch(\r\n        addItemAction(\r\n          this.state.inputText,\r\n          parseInt(this.state.amount, 10),\r\n          parseFloat(this.state.cost, 10)\r\n        )\r\n      );\r\n      this.clearInputs();\r\n    }\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ inputText: e.target.value });\r\n  };\r\n  handleCostChange = e => {\r\n    this.setState({ cost: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <InputGroup>\r\n              <InputGroupAddon addonType=\"prepend\">\r\n                <Button color=\"primary\" outline onClick={this.addItem}>\r\n                  Add Item\r\n                </Button>\r\n              </InputGroupAddon>\r\n              <Input\r\n                type=\"text\"\r\n                value={this.state.inputText}\r\n                placeholder={\"Enter Item Name\"}\r\n                onChange={this.handleChange}\r\n                onKeyPress={this.handleKeyPress}\r\n              />\r\n            </InputGroup>\r\n            <InputGroup>\r\n              <Input\r\n                type=\"number\"\r\n                placeholder={\"enter amount\"}\r\n                onKeyPress={this.handleKeyPress}\r\n                value={this.state.amount}\r\n                onChange={this.handleAmountChange}\r\n              />\r\n              <InputGroupAddon addonType=\"prepend\">$</InputGroupAddon>\r\n              <Input\r\n                type=\"number\"\r\n                placeholder={\"enter cost amount\"}\r\n                onKeyPress={this.handleKeyPress}\r\n                value={this.state.cost}\r\n                onChange={this.handleCostChange}\r\n              />\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(AddShoppingItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ShoppingItem from \"./ShoppingItem\";\r\nimport AddShoppingItem from \"./AddShoppingItem\";\r\n\r\n// bootstrap\r\nimport { Container, Row, Col, ListGroup } from \"reactstrap\";\r\nconst ShoppingStore = props => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <h2>Shopping Store</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-2\">\r\n        <Col>\r\n          <AddShoppingItem />\r\n          <ListGroup className=\"mt-4\">\r\n            {props.shoppingItems.map(item => {\r\n              return <ShoppingItem item={item} />;\r\n            })}\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  shoppingItems: state.shoppingItems\r\n});\r\nexport default connect(mapStateToProps)(ShoppingStore);\r\n","import React from \"react\";\r\nimport { ListGroupItem, Input, Container, Row, Col } from \"reactstrap\";\r\nimport { increaseItemQuantityAction } from \"../actions\";\r\n\r\nclass CartItem extends React.Component {\r\n  state = {\r\n    quantity: this.props.item.amount\r\n  };\r\n  validateIncrease = () => {\r\n    return (\r\n      this.state.quantity > 0 &&\r\n      this.state.quantity < this.props.item.totalAmount\r\n    );\r\n  };\r\n  dispatchQuantity = () => {\r\n    // hand it here\r\n    if (this.validateIncrease()) {\r\n      const newItem = {\r\n        ...this.props.item,\r\n        amount: this.state.quantity\r\n      };\r\n      this.props.dispatch(increaseItemQuantityAction(newItem));\r\n    }\r\n  };\r\n  handleQuantity = e => {\r\n    console.log(\"increase/dec.\");\r\n    this.setState({ quantity: parseInt(e.target.value, 10) });\r\n    this.dispatchQuantity();\r\n  };\r\n  render() {\r\n    const props = this.props;\r\n\r\n    return (\r\n      <ListGroupItem key={props.item.id}>\r\n        <Container>\r\n          <Row>\r\n            <Col>{props.item.itemText}</Col>\r\n            <Col>\r\n              {/* TODO: input for increasing and decreasing amount */}\r\n              {/* <Input\r\n                  onChange={this.handleQuantity}\r\n                  type=\"number\"\r\n                  value={this.props.item.amount}\r\n                /> */}\r\n            </Col>\r\n            <Col>\r\n              <p>\r\n                {this.props.item.amount} X ${props.item.cost}\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </ListGroupItem>\r\n    );\r\n  }\r\n}\r\nexport default CartItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CartItem from \"./CarItem\";\r\nimport { ListGroup, ListGroupItem, Button, Row, Col } from \"reactstrap\";\r\nimport { checkoutAction } from \"../actions\";\r\n\r\nclass CartItems extends React.Component {\r\n  checkOut = () => {\r\n    // dispatch an action that clears the cart\r\n    this.props.dispatch(checkoutAction());\r\n  };\r\n  render() {\r\n    const props = this.props;\r\n    return (\r\n      <div>\r\n        <Row className=\"mt-4\">\r\n          <Col>\r\n            <h2>My Cart</h2>\r\n          </Col>\r\n        </Row>\r\n        <ListGroup>\r\n          {props.cartItems.map(item => {\r\n            return <CartItem item={item} />;\r\n          })}\r\n        </ListGroup>\r\n        <ListGroup className=\"mt-2\">\r\n          <ListGroupItem key=\"itemTotal\">\r\n            <Row>\r\n              <Col>\r\n                <strong>Total: </strong>\r\n              </Col>\r\n              <Col>\r\n                <strong>\r\n                  $\r\n                  {props.cartItems.reduce((a, b) => {\r\n                    return a + b.cost * b.amount;\r\n                  }, 0)}\r\n                </strong>\r\n              </Col>\r\n            </Row>\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n        <Row>\r\n          <Col>\r\n            <Button onClick={this.checkOut} className=\"mt-4 mb-4\" color=\"info\">\r\n              Proceede To Checkout\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  cartItems: state.cartItems\r\n});\r\nexport default connect(mapStateToProps)(CartItems);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// bootstrap\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n// store\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n// components\r\nimport ShoppingStore from \"./components/ShoppingStore\";\r\nimport CartItems from \"./components/CartItems\";\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Container className=\"App\">\r\n        <Row>\r\n          <Col>\r\n            <ShoppingStore />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <CartItems />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}